services:
  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=prometheus,container_name=prometheus"

  loki:
    image: grafana/loki:3.5.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yml
      - loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:12.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=grafana,container_name=grafana"

  demo-fastapi-rolldice:
    build:
      context: ./apps/dice-roller
      dockerfile: Dockerfile
    container_name: demo-fastapi-rolldice
    ports:
      - "8001:8001"
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=demo-fastapi-rolldice,container_name=demo-fastapi-rolldice"

  shiny-curl-gui:
    build:
      context: ./apps/shiny-curl-gui
      dockerfile: Dockerfile
    container_name: shiny-curl-gui
    ports:
      - "8002:3838"
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=shiny-curl-gui,container_name=shiny-curl-gui"

volumes:
  prometheus-data:
  loki-data:
  grafana-data:

networks:
  monitoring:
    driver: bridge