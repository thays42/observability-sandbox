services:
  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - monitoring
    restart: unless-stopped
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
        loki-external-labels: "job=prometheus,container_name=prometheus"

  loki:
    image: grafana/loki:3.5.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yml
      - loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - monitoring
    restart: unless-stopped

  tempo:
    image: grafana/tempo:2.7.2
    container_name: tempo
    ports:
      - "3200:3200"   # Tempo HTTP
    volumes:
      - ./tempo/tempo-config.yml:/etc/tempo/tempo.yml
      - tempo-data:/var/tempo
    command: -config.file=/etc/tempo/tempo.yml
    networks:
      - monitoring
    restart: unless-stopped
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
        loki-external-labels: "job=tempo,container_name=tempo"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.115.1
    container_name: otel-collector
    ports:
      - "4317:4317"   # OTLP gRPC (exposed for apps)
      - "4318:4318"   # OTLP HTTP (exposed for apps)
    volumes:
      - ./otel-collector/otel-collector-config.yml:/etc/otelcol-contrib/config.yml
    command: --config=/etc/otelcol-contrib/config.yml
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - tempo
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
        loki-external-labels: "job=otel-collector,container_name=otel-collector"

  grafana:
    image: grafana/grafana:12.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
        loki-external-labels: "job=grafana,container_name=grafana"

volumes:
  prometheus-data:
  loki-data:
  grafana-data:
  tempo-data:

networks:
  monitoring:
    external: true
