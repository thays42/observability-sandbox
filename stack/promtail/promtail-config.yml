server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s

    relabel_configs:
      # Only scrape containers from our compose projects
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        regex: '(stack|dice-roller|shiny-curl-gui)'
        action: keep

      # Use container name without leading slash
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'

      # Add compose project label
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'compose_project'

      # Add compose service label
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'

      # Add job label based on service name
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'job'

      # Add stream label (stdout/stderr)
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'

    pipeline_stages:
      # Try to parse as JSON
      - json:
          expressions:
            level: level
            message: message
            trace_id: trace_id
            span_id: span_id
            timestamp: timestamp

      # If JSON parsing succeeds, use the message field as the log line
      - output:
          source: message

      # Add parsed fields as labels (optional - be careful with cardinality)
      - labels:
          level:
